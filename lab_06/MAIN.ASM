EXTRN INPUT_COMMAND: NEAR
EXTRN INPUT_SIGNED_OCTAL: NEAR
EXTRN OUTPUT_UNSIGNED_HEX: NEAR
EXTRN OUTPUT_SIGNED_BIN: NEAR
EXTRN MOVE_CARRIAGE: NEAR

STACKSEG SEGMENT PARA STACK 'STACK'
    DB 200H DUP(0)
STACKSEG ENDS

DATASEG SEGMENT PARA PUBLIC 'DATA'
    MENU DB 'Available actions:', 13, 10
        DB '1. Input signed octal number;', 13, 10
        DB '2. Convert to unsigned hexadecimal;', 13, 10
        DB '3. Convert to signed binary;', 13, 10
        DB '4. Exit program.', 13, 10, 10
        DB 'Enter action number: $'
    ACTIONS DW INPUT_SIGNED_OCTAL, OUTPUT_UNSIGNED_HEX, OUTPUT_SIGNED_BIN, EXIT
DATASEG ENDS

CODESEG SEGMENT PARA PUBLIC 'CODE'
    ASSUME CS:CODESEG, DS:DATASEG, SS:STACKSEG

OUTPUT_MENU PROC NEAR
    MOV AH, 9
    MOV DX, OFFSET MENU
    INT 21H
    RET
OUTPUT_MENU ENDP

EXIT PROC NEAR
    MOV AX, 4C00H
    INT 21H
EXIT ENDP

MAIN:
    MOV AX, DATASEG
    MOV DS, AX

    MAINLOOP:
        CALL OUTPUT_MENU
        CALL INPUT_COMMAND
        CALL MOVE_CARRIAGE
        CALL ACTIONS[SI]
        JMP MAINLOOP

CODESEG ENDS
END MAIN
